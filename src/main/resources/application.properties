# Nome da aplicação
spring.application.name=myStock
# Exibe mensagens de erro valores inválidos (400)
server.error.include-message=always
server.error.include-binding-errors=always

# Spring security logging debug
logging.level.org.springframework.security=DEBUG

# Credenciais do database MySQL
spring.datasource.username=root
spring.datasource.password=1234

# IP e porta do database MySQL
##mySql.ip=localhost

# URL do database mysql(Local)
spring.datasource.url=jdbc:mysql://${ENDPOINT_MYSQL}:3306/myStock
# É a classe do Driver JDBC
# Explicação: JPA é uma API de mais alto nível pra interagir diretamente com o database, que utiliza JDBC, que é uma API de mais baixo nível, que interage com o database também.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# URL do Database H2 (para testes, sem a necessidade de ter o bd no PC)
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:myStock
#spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.mysql.MySQL8Dialect

# URL DO DATABASE SQL SERVER (Production, TOMAR CUIDADO PFVR)
#spring.datasource.url=jdbc:sqlserver://mystockdatabaseserver.database.windows.net:1433;database=myStockDataBase;encrypt=true;trustServerCertificate=false;
#spring.datasource.username=mystockAdmin
#spring.datasource.password=my@Stock
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2016Dialect

# Exibe as queries executadas em nosso console
spring.jpa.show-sql=true
# Configuração do pool de conexões
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.stat=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=DEBUG
# logging.level.org.springframework.context=DEBUG

# Formata os SQL (quebra linha, identa etc)
spring.jpa.properties.hibernate.format_sql=true
# DDL - Data Definition Language - Linguagem de Definição de Dados.
# São os comandos que interagem com os objetos do banco, como por exemplo: CREATE, ALTER e DROP
# Não queremos que a aplicação possa operar com os objetos do banco, apenas os dados.
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Chave secreta pra o encrypt dos logins
api.security.token.secret=${JWT_SECRET:VfmGb9cX1h2VZ6Ge325tw2jwtiTEO9k5PytQWeOaLfEvZV297wBlQcu9HgbEQLqU}
# Configuração do email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:goupnoreply@gmail.com}
spring.mail.password=${EMAIL_PW:cjfo vtxq uhjz rmze}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

spring.devtools.restart.enabled=true

mystock.api.prefix=/api/v1